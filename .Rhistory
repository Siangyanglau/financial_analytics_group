RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]<H,]
#Exotic Option - down-and-out
RF_GBM_do <- RF_GBM[RF_GBM[,ncol(RF_GBM)]>=H,]
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
#Exotic Option - down-and-in
payoff_di <- pmax(RF_GBM_di[,ncol(RF_GBM_di)] - strike,0)
#Exotic Option - down-and-out
payoff_do <- pmax(RF_GBM_do[,ncol(RF_GBM_do)] - strike,0)
mean_vanilla<-mean(payoff_vanilla)
mean_down_in<-mean(payoff_di)
mean_down_out<-mean(payoff_do)
discount_vanilla<-exp(-r*T)*mean_vanilla
discount_down_in<-exp(-r*T)*mean_down_in
discount_down_out<-exp(-r*T)*mean_down_out
discount_vanilla
discount_down_out
discount_down_in
pass_rand<-t(apply(pass_rand,1,cumsum))*vola*sqrt(tStep) #
#drift_matrix: x=x0*exp(mu*t-vola^2*t/2)*exp(vola*N(0,1)*sqrt(t))
pass_drift<-matrix(rep(exp(-0.5*time*vola^2+time*drift),nPaths),nrow=nPaths,ncol=length(time),
byrow=TRUE)
#Generation of the paths (scaling the random component by tStep)
RF_GBM<-start_value*exp(pass_rand*vola*sqrt(tStep))*pass_drift
rownames(RF_GBM)<-paste("history",as.character(seq(1,nPaths,1)),sep="")
colnames(RF_GBM)<-paste(as.character(time),"y",sep="")
par(mfrow=c(1,1))
matplot(time,t(RF_GBM)[,1:100],type="l",xlab="t(y)",ylab="RF",main="GBM process")
points(time,apply(t(RF_GBM),1,mean),type="l",col=1,lwd=4)
points(time,apply(t(RF_GBM),1,quantile,0.05),type="l",col=2,lwd=4)
points(time,apply(t(RF_GBM),1,quantile,0.95),type="l",col=2,lwd=4)
grid()
RF_GBM_vanilla <- RF_GBM
#Exotic Option - down-and-in
RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]<H,]
#Exotic Option - down-and-out
RF_GBM_do <- RF_GBM[RF_GBM[,ncol(RF_GBM)]>=H,]
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
#Exotic Option - down-and-in
payoff_di <- pmax(RF_GBM_di[,ncol(RF_GBM_di)] - strike,0)
#Exotic Option - down-and-out
payoff_do <- pmax(RF_GBM_do[,ncol(RF_GBM_do)] - strike,0)
mean_vanilla<-mean(payoff_vanilla)
mean_down_in<-mean(payoff_di)
mean_down_out<-mean(payoff_do)
discount_vanilla<-exp(-r*T)*mean_vanilla
discount_down_in<-exp(-r*T)*mean_down_in
discount_down_out<-exp(-r*T)*mean_down_out
discount_down_in
discount_down_out
discount_vanilla
pass_rand<-t(apply(pass_rand,1,cumsum))*vola*sqrt(tStep) #
#drift_matrix: x=x0*exp(mu*t-vola^2*t/2)*exp(vola*N(0,1)*sqrt(t))
pass_drift<-matrix(rep(exp(-0.5*time*vola^2+time*drift),nPaths),nrow=nPaths,ncol=length(time),
byrow=TRUE)
#Generation of the paths (scaling the random component by tStep)
RF_GBM<-start_value*exp(pass_rand)*pass_drift #
rownames(RF_GBM)<-paste("history",as.character(seq(1,nPaths,1)),sep="")
colnames(RF_GBM)<-paste(as.character(time),"y",sep="")
par(mfrow=c(1,1))
matplot(time,t(RF_GBM)[,1:100],type="l",xlab="t(y)",ylab="RF",main="GBM process")
points(time,apply(t(RF_GBM),1,mean),type="l",col=1,lwd=4)
points(time,apply(t(RF_GBM),1,quantile,0.05),type="l",col=2,lwd=4)
points(time,apply(t(RF_GBM),1,quantile,0.95),type="l",col=2,lwd=4)
grid()
#########################################################
# Step 2 - Decide whether each path is knocked in or out
# and thus determine the final payoff of each path.
#########################################################
#Vanilla Opiton
RF_GBM_vanilla <- RF_GBM
#Exotic Option - down-and-in
RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]<H,]
#Exotic Option - down-and-out
RF_GBM_do <- RF_GBM[RF_GBM[,ncol(RF_GBM)]>=H,]
############################################
# Step 3 - Calculate the payoff at maturity.
############################################
#Vanilla Opiton
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
#Exotic Option - down-and-in
payoff_di <- pmax(RF_GBM_di[,ncol(RF_GBM_di)] - strike,0)
#Exotic Option - down-and-out
payoff_do <- pmax(RF_GBM_do[,ncol(RF_GBM_do)] - strike,0)
mean_vanilla<-mean(payoff_vanilla)
mean_down_in<-mean(payoff_di)
mean_down_out<-mean(payoff_do)
discount_vanilla<-exp(-r*T)*mean_vanilla
discount_down_in<-exp(-r*T)*mean_down_in
discount_down_out<-exp(-r*T)*mean_down_out
discount_down_in
discount_down_out
discount_vanilla
pass_rand<-t(apply(pass_rand,1,cumsum))
#drift_matrix: x=x0*exp(mu*t-vola^2*t/2)*exp(vola*N(0,1)*sqrt(t))
pass_drift<-matrix(rep(exp(-0.5*time*vola^2+time*drift),nPaths),nrow=nPaths,ncol=length(time),
byrow=TRUE)
#Generation of the paths (scaling the random component by tStep)
RF_GBM<-start_value*exp(pass_rand*vola*sqrt(tStep))*pass_drift
rownames(RF_GBM)<-paste("history",as.character(seq(1,nPaths,1)),sep="")
colnames(RF_GBM)<-paste(as.character(time),"y",sep="")
par(mfrow=c(1,1))
matplot(time,t(RF_GBM)[,1:100],type="l",xlab="t(y)",ylab="RF",main="GBM process")
points(time,apply(t(RF_GBM),1,mean),type="l",col=1,lwd=4)
points(time,apply(t(RF_GBM),1,quantile,0.05),type="l",col=2,lwd=4)
points(time,apply(t(RF_GBM),1,quantile,0.95),type="l",col=2,lwd=4)
grid()
RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]<H,]
#Exotic Option - down-and-out
RF_GBM_do <- RF_GBM[RF_GBM[,ncol(RF_GBM)]>H,]
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
#Exotic Option - down-and-in
payoff_di <- pmax(RF_GBM_di[,ncol(RF_GBM_di)] - strike,0)
#Exotic Option - down-and-out
payoff_do <- pmax(RF_GBM_do[,ncol(RF_GBM_do)] - strike,0)
mean_vanilla<-mean(payoff_vanilla)
mean_down_in<-mean(payoff_di)
mean_down_out<-mean(payoff_do)
discount_vanilla<-exp(-r*T)*mean_vanilla
discount_down_in<-exp(-r*T)*mean_down_in
discount_down_out<-exp(-r*T)*mean_down_out
discount_down_out
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
#Exotic Option - down-and-in
payoff_di <- pmax(RF_GBM_di[,ncol(RF_GBM_di)] - strike,0)
#Exotic Option - down-and-out
payoff_do <- pmax(RF_GBM_do[,ncol(RF_GBM_do)] - strike,0)
RF_GBM_vanilla <- RF_GBM
#Exotic Option - down-and-in
RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]<H,]
#Exotic Option - down-and-out
RF_GBM_do <- RF_GBM[RF_GBM[,ncol(RF_GBM)]>H,]
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
#Exotic Option - down-and-in
payoff_di <- pmax(RF_GBM_di[,ncol(RF_GBM_di)] - strike,0)
#Exotic Option - down-and-out
payoff_do <- pmax(RF_GBM_do[,ncol(RF_GBM_do)] - strike,0)
discounted_payoff_vanilla <- exp(-r*T)*payoff_vanilla
#Exotic Option - down-and-in
discounted_payoff_di <- exp(-r*T)*payoff_di
#Exotic Option - down-and-out
discounted_payoff_do <- exp(-r*T)*payoff_do
price_vanilla <- mean(discounted_payoff_vanilla)
#Exotic Option - down-and-in
price_di <- mean(discounted_payoff_di)
#Exotic Option - down-and-out
price_do <- mean(discounted_payoff_do)
price_do
#Exotic Option - down-and-out
RF_GBM_do <- RF_GBM[RF_GBM[,ncol(RF_GBM)]>=H,]
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
#Exotic Option - down-and-in
payoff_di <- pmax(RF_GBM_di[,ncol(RF_GBM_di)] - strike,0)
#Exotic Option - down-and-out
payoff_do <- pmax(RF_GBM_do[,ncol(RF_GBM_do)] - strike,0)
mean_vanilla<-mean(payoff_vanilla)
mean_down_in<-mean(payoff_di)
mean_down_out<-mean(payoff_do)
discount_vanilla<-exp(-r*T)*mean_vanilla
discount_down_in<-exp(-r*T)*mean_down_in
discount_down_out<-exp(-r*T)*mean_down_out
###############################################
discount_down_out
price_do <- mean(discounted_payoff_do)
price_vanilla
set.seed(12345)
# Simulation period
T<-0.5
# Step in y with 360 day-count convention
tStep<-1/(360*2)
# Scenarios
nPaths<-10000
#Evaluation times in units of year
time<-seq(0,T,tStep)
# Parameters (S0, vola, drift)
start_value<-100
# yearly vola
vola<-0.25
# Annualized rate of interest
r <-0.01
# Annualized cost-of-carry rate
b <-0.01
# Barrier Value
H <- 75
# yearly drift
drift<-r
# Strike price
strike<-90
#######################################################################################
# Step 1 - Simulate random paths with GBM process for the spot value until maturity T.
#######################################################################################
#Definition of the RF box
RF_GBM<-matrix(0,nrow=nPaths,ncol=length(time))
#We generate random numbers N(0,1)
#Always better to generate the innovations in a vectorial fashion and then "distribute" them
pass_rand<-rnorm(nPaths*(length(time)-1))
pass_rand<-matrix(pass_rand,nrow=nPaths,ncol=(length(time)-1))
pass_rand<-scale(pass_rand,center = TRUE,scale = TRUE)
#Adding the starting value
pass_rand<-cbind(rep(0,nPaths),pass_rand)
#Accrueting the innovations
pass_rand<-t(apply(pass_rand,1,cumsum))
#drift_matrix: x=x0*exp(mu*t-vola^2*t/2)*exp(vola*N(0,1)*sqrt(t))
pass_drift<-matrix(rep(exp(-0.5*time*vola^2+time*drift),nPaths),nrow=nPaths,ncol=length(time),
byrow=TRUE)
#Generation of the paths (scaling the random component by tStep)
RF_GBM<-start_value*exp(pass_rand*vola*sqrt(tStep))*pass_drift
rownames(RF_GBM)<-paste("history",as.character(seq(1,nPaths,1)),sep="")
colnames(RF_GBM)<-paste(as.character(time),"y",sep="")
par(mfrow=c(1,1))
matplot(time,t(RF_GBM)[,1:100],type="l",xlab="t(y)",ylab="RF",main="GBM process")
points(time,apply(t(RF_GBM),1,mean),type="l",col=1,lwd=4)
points(time,apply(t(RF_GBM),1,quantile,0.05),type="l",col=2,lwd=4)
points(time,apply(t(RF_GBM),1,quantile,0.95),type="l",col=2,lwd=4)
grid()
#########################################################
# Step 2 - Decide whether each path is knocked in or out
# and thus determine the final payoff of each path.
#########################################################
#Vanilla Opiton
RF_GBM_vanilla <- RF_GBM
#Exotic Option - down-and-in
RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]<H,]
#Exotic Option - down-and-out
RF_GBM_do <- RF_GBM[RF_GBM[,ncol(RF_GBM)]>=H,]
############################################
# Step 3 - Calculate the payoff at maturity.
############################################
#Vanilla Opiton
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
#Exotic Option - down-and-in
payoff_di <- pmax(RF_GBM_di[,ncol(RF_GBM_di)] - strike,0)
#Exotic Option - down-and-out
payoff_do <- pmax(RF_GBM_do[,ncol(RF_GBM_do)] - strike,0)
###################################################################
# Step 4 - Discount all future payoff distribution of values to t0.
###################################################################
#Vanilla Opiton
discounted_payoff_vanilla <- exp(-r*T)*payoff_vanilla
#Exotic Option - down-and-in
discounted_payoff_di <- exp(-r*T)*payoff_di
#Exotic Option - down-and-out
discounted_payoff_do <- exp(-r*T)*payoff_do
################################################################
# Step 5 - Calculate the mean of discounted payoff distribution.
################################################################
#Vanilla Opiton
price_vanilla <- mean(discounted_payoff_vanilla)
#Exotic Option - down-and-in
price_di <- mean(discounted_payoff_di)
#Exotic Option - down-and-out
price_do <- mean(discounted_payoff_do)
price_do
RF_GBM
head(RF_GBM)
head(RF_GBM)
View(RF_GBM)
RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]<H,]
#Exotic Option - down-and-out
RF_GBM_do <- RF_GBM[RF_GBM[,ncol(RF_GBM)]>H,]
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
#Exotic Option - down-and-in
payoff_di <- pmax(RF_GBM_di[,ncol(RF_GBM_di)] - strike,0)
#Exotic Option - down-and-out
payoff_do <- pmax(RF_GBM_do[,ncol(RF_GBM_do)] - strike,0)
###################################################################
# Step 4 - Discount all future payoff distribution of values to t0.
###################################################################
#Vanilla Opiton
discounted_payoff_vanilla <- exp(-r*T)*payoff_vanilla
#Exotic Option - down-and-in
discounted_payoff_di <- exp(-r*T)*payoff_di
#Exotic Option - down-and-out
discounted_payoff_do <- exp(-r*T)*payoff_do
################################################################
# Step 5 - Calculate the mean of discounted payoff distribution.
################################################################
#Vanilla Opiton
price_vanilla <- mean(discounted_payoff_vanilla)
#Exotic Option - down-and-in
price_di <- mean(discounted_payoff_di)
#Exotic Option - down-and-out
price_do <- mean(discounted_payoff_do)
price_do
StandardBarrierOption(TypeFlag = "cdo", S = 100, X = 90,H = 75, K = 0, Time = 0.5, r=0.01, b = 0.01, sigma = 0.25)
library("fExoticOptions", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("fExoticOptions", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
StandardBarrierOption(TypeFlag = "cdo", S = 100, X = 90,H = 75, K = 0, Time = 0.5, r=0.01, b = 0.01, sigma = 0.25)
View(RF_GBM)
test<-RF_GBM_vanilla[,ncol(RF_GBM_vanilla)]
ncol(RF_GBM_vanilla)
RF_GBM_vanilla[1,361]
head(RF_GBM_vanilla[0,361])
head(RF_GBM_vanilla[,361])
payoff_vanilla <- pmax(RF_GBM_vanilla - strike,0)
discounted_payoff_vanilla <- exp(-r*T)*payoff_vanilla
price_vanilla <- mean(discounted_payoff_vanilla)
price_vanilla
payoff_vanilla <- pmax(RF_GBM_vanilla[,2:ncol(RF_GBM_vanilla)] - strike,0)
discounted_payoff_vanilla <- exp(-r*T)*payoff_vanilla
price_vanilla <- mean(discounted_payoff_vanilla)
price_vanilla
View(RF_GBM_do)
payoff_do <- pmax(RF_GBM_do[,2:ncol(RF_GBM_do)] - strike,0)
discounted_payoff_do <- exp(-r*T)*payoff_do
price_do <- mean(discounted_payoff_do)
price_do
payoff_di <- pmax(RF_GBM_di[,2ncol(RF_GBM_di)] - strike,0)
payoff_di <- pmax(RF_GBM_di[,2:ncol(RF_GBM_di)] - strike,0)
discounted_payoff_di <- exp(-r*T)*payoff_di
price_di <- mean(discounted_payoff_di)
price_di
RF_GBM_di <- RF_GBM[RF_GBM[,2:ncol(RF_GBM)]<H,]
#Exotic Option - down-and-out
RF_GBM_do <- RF_GBM[RF_GBM[,2:ncol(RF_GBM)]>=H,]
ncol(RF_GBM_vanilla)
ncol(RF_GBM_do)
RF_GBM_vanilla <- RF_GBM[,ncol(RF_GBM)]
View(RF_GBM_vanilla)
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
RF_GBM_vanilla <- RF_GBM
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
testmean<-mean(payoff_vanilla)
discounted_payoff_vanilla <- exp(-r*T)*payoff_vanilla
discount_payoff_vanilla
discounted_payoff_vanilla
testprice<-exp(-r*T)*testmean
testprice
RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]]
if(any(RF_GBM_di < H)){
payoff_downin <- payoff_downin <- pmax (RF_GBM_di - K2, 0)
}else{ payoff_downin<-0
}
testin<-mean(payoff_downin)
pin<-exp(-r*T)**testin
pin
if(any(RF_GBM_di < H)){
payoff_downin <- payoff_downin <- pmax (RF_GBM_di - strike, 0)
}else{ payoff_downin<-0
}
payoff_downin_price <- mean(exp(-r2*T2)*(payoff_downin))
if(any(RF_GBM_di < H)){
payoff_downin <- payoff_downin <- pmax (RF_GBM_di - strike, 0)
}else{ payoff_downin<-0
}
payoff_downin_price <- mean(exp(-r*T)*(payoff_downin))
payoff_downin_price
if(any(RF_GBM_di >= H)){
payoff_downout <- pmax (RF_GBM_di - strike, 0)
}else{
payoff_downout <- 0
}
payoff_downout_price <- mean(exp(-r*T)*(payoff_downout))
payoff_downout_price
if(any(RF_GBM_di >H)){
payoff_downout <- pmax (RF_GBM_di - strike, 0)
}else{
payoff_downout <- 0
}
payoff_downout_price <- mean(exp(-r*T)*(payoff_downout))
payoff_downout_price
if(any(RF_GBM_di <= H)){
payoff_downin <- 0
}else{
payoff_downin <- pmax (RF_GBM_di - strike, 0)
}
payoff_downin_price <- mean(exp(-r*T)*(payoff_downin))
payoff_downin_price
RF_GBM_vanilla <- RF_GBM
#Exotic Option - down-and-in
RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]<=H,]
#Exotic Option - down-and-out
RF_GBM_do <- RF_GBM[RF_GBM[,ncol(RF_GBM)]>H,]
payoff_vanilla <- pmax(RF_GBM_vanilla[,ncol(RF_GBM_vanilla)] - strike,0)
#Exotic Option - down-and-in
payoff_di <- pmax(RF_GBM_di[,ncol(RF_GBM_di)] - strike,0)
#Exotic Option - down-and-out
payoff_do <- pmax(RF_GBM_do[,ncol(RF_GBM_do)] - strike,0)
discounted_payoff_vanilla <- exp(-r*T)*payoff_vanilla
#Exotic Option - down-and-in
discounted_payoff_di <- exp(-r*T)*payoff_di
#Exotic Option - down-and-out
discounted_payoff_do <- exp(-r*T)*payoff_do
price_vanilla <- mean(discounted_payoff_vanilla)
#Exotic Option - down-and-in
price_di <- mean(discounted_payoff_di)
#Exotic Option - down-and-out
price_do <- mean(discounted_payoff_do)
price_do
RF_GBM_at_maturity<-RF_GBM[,ncol(RF_GBM)]
down-in
if(any(RF_GBM_at_maturity < H)){
payoff_downin <- pmax (RF_GBM_at_maturity - strike, 0)
}else{
payoff_downin <- 0
}
if(any(RF_GBM_at_maturity > H2)){
payoff_downout <- pmax (RF_GBM_at_maturity - strike, 0)
}else{
payoff_downout <- 0
}
payoff_downin_price <- mean(exp(-r*T)*(payoff_downin))
payoff_downout_price <- mean(exp(-r*T)*(payoff_downout))
RF_GBM_at_maturity<-RF_GBM[,ncol(RF_GBM)]
#down-in
if(any(RF_GBM_at_maturity < H)){
payoff_downin <- pmax (RF_GBM_at_maturity - strike, 0)
}else{
payoff_downin <- 0
}
#downout
if(any(RF_GBM_at_maturity > H)){
payoff_downout <- pmax (RF_GBM_at_maturity - strike, 0)
}else{
payoff_downout <- 0
}
#vanilla
payoff_vanilla<-pmax(RF_GBM_at_maturity-strike,0)
payoff_downin_price <- mean(exp(-r*T)*(payoff_downin))
payoff_downout_price <- mean(exp(-r*T)*(payoff_downout))
payoff_vanilla_price<-mean(exp(-r*T)*(payoff_vanilla)
)
payoff_downin_price
payoff_downout_price
payoff_vanilla_price
if(any(RF_GBM_at_maturity < H)){
payoff_downin <- pmax (RF_GBM_at_maturity - strike, 0)
}else{
payoff_downin <- 0
}
payoff_downin_price <- mean(exp(-r*T)*(payoff_downin))
payoff_downin_price
if(any(RF_GBM_at_maturity < H)){
payoff_downin <-0
}else{
payoff_downin <-  pmax (RF_GBM_at_maturity - strike, 0)
}
payoff_downin_price
if(any(RF_GBM_at_maturity < H)){
payoff_downin <-pmax (RF_GBM_at_maturity - strike, 0)
}else{
payoff_downin <-0
}
payoff_downin_price
if(any(RF_GBM_at_maturity < H)){
payoff_downin <-0
}else{
payoff_downin <-pmax (RF_GBM_at_maturity - strike, 0)
}
if(any(RF_GBM_at_maturity < H)){
payoff_downin <-pmax (RF_GBM_at_maturity - strike, 0)
}else{
payoff_downin <-0
}
payoff_downin_price <- mean(exp(-r*T)*(payoffin_downin))
payoff_downin_price <- mean(exp(-r*T)*(payoff_downin))
payoff_downin
payoff_downin_price
payoff_downin
tail(payoff_downin)
tail(payoff_downout)
if(any(RF_GBM_at_maturity < H)){
payoff_downin <-0
}else{
payoff_downin <-pmax (RF_GBM_at_maturity - strike, 0)
}
tail(payoff_downin)
tail(payoff_vanilla)
if(any(RF_GBM < H)){
payoff_downin <-0
}else{
payoff_downin <-pmax (RF_GBM_at_maturity - strike, 0)
}
payoff_downin_price <- mean(exp(-r*T)*(payoff_downin))
#downout
if(any(RF_GBM > H)){
payoff_downout <- pmax (RF_GBM_at_maturity - strike, 0)
}else{
payoff_downout <- 0
}
payoff_downout_price <- mean(exp(-r*T)*(payoff_downout))
payoff_downin_price
payoff_downout_price
payoff_vanilla<-pmax(RF_GBM_at_maturity-strike,0)
payoff_vanilla_price<-mean(exp(-r*T)*(payoff_vanilla))
payoff_vanilla_price
RF_GBM_vanilla<-RF_GBM[,ncol(RF_GBM)]
payoff_vanilla<-pmax(RF_GBM_vanilla-strike,0)
plot(RF_GBM_vanilla,payoff_vanilla,pch=19,main="Payoff of Vanilla Option", xlab="Price at Maturity", ylab="Payoff")
#Exotic Option - down-and-in
if(any(RF_GBM[,ncol(RF_GBM)<H])){
RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]<=H,]
}else {RF_GBM_di<0}
}
if(any(RF_GBM[,ncol(RF_GBM)<H])){
RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]<=H,]
}else {RF_GBM_di<0}
ncol(pmax())
ncol(payoff_do
)
length(payoff_do)
length(RF_GBM_do)
RF_GBM_di <- RF_GBM[RF_GBM[,ncol(RF_GBM)]<=H,]
plot(RF_GBM_di[,ncol(RF_GBM_di)],payoff_di,pch=19,main="Payoff of Down-and-in Option", xlab="Price at Maturity", ylab="Payoff")
abline(v=start_value,col=4)
print(paste0("The price of exotic down-and-in option is ", price_di))
RF_GBM_do <- RF_GBM[RF_GBM[,ncol(RF_GBM)]>H,]
RF_GBM_do <- RF_GBM[RF_GBM[,ncol(RF_GBM)]>H,]
plot(RF_GBM_do[,ncol(RF_GBM_do)],payoff_do,pch=19,main="Payoff of Down-and-out Option", xlab="Price at Maturity", ylab="Payoff")
abline(v=start_value,col=4)
plot(RF_GBM_vanilla,payoff_vanilla,pch=19,main="Payoff of Vanilla Option", xlab="Price at Maturity", ylab="Payoff")
abline(v=start_value,col=4)
print(paste0("The price of vanilla option is ", price_vanilla))
